'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace ServicioAplicacion
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="ServicioAplicacion.IAplicacionWcf")>  _
    Public Interface IAplicacionWcf
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAplicacionWcf/SeleccionarTodos", ReplyAction:="http://tempuri.org/IAplicacionWcf/SeleccionarTodosResponse")>  _
        Function SeleccionarTodos() As Entidades.AplicacionENT()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAplicacionWcf/SeleccionarTodos", ReplyAction:="http://tempuri.org/IAplicacionWcf/SeleccionarTodosResponse")>  _
        Function SeleccionarTodosAsync() As System.Threading.Tasks.Task(Of Entidades.AplicacionENT())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAplicacionWcf/SelecccionarAplicacion", ReplyAction:="http://tempuri.org/IAplicacionWcf/SelecccionarAplicacionResponse")>  _
        Function SelecccionarAplicacion(ByVal ProveedorId As Integer) As Entidades.AplicacionENT()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAplicacionWcf/SelecccionarAplicacion", ReplyAction:="http://tempuri.org/IAplicacionWcf/SelecccionarAplicacionResponse")>  _
        Function SelecccionarAplicacionAsync(ByVal ProveedorId As Integer) As System.Threading.Tasks.Task(Of Entidades.AplicacionENT())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAplicacionWcf/Insertar", ReplyAction:="http://tempuri.org/IAplicacionWcf/InsertarResponse")>  _
        Function Insertar(ByVal aplicacionENT As Entidades.AplicacionENT) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAplicacionWcf/Insertar", ReplyAction:="http://tempuri.org/IAplicacionWcf/InsertarResponse")>  _
        Function InsertarAsync(ByVal aplicacionENT As Entidades.AplicacionENT) As System.Threading.Tasks.Task(Of Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAplicacionWcf/Actualizar", ReplyAction:="http://tempuri.org/IAplicacionWcf/ActualizarResponse")>  _
        Function Actualizar(ByVal aplicacionENT As Entidades.AplicacionENT) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAplicacionWcf/Actualizar", ReplyAction:="http://tempuri.org/IAplicacionWcf/ActualizarResponse")>  _
        Function ActualizarAsync(ByVal aplicacionENT As Entidades.AplicacionENT) As System.Threading.Tasks.Task(Of Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAplicacionWcf/SeleccionarProveedor", ReplyAction:="http://tempuri.org/IAplicacionWcf/SeleccionarProveedorResponse")>  _
        Function SeleccionarProveedor() As Entidades.ProveedorENT()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAplicacionWcf/SeleccionarProveedor", ReplyAction:="http://tempuri.org/IAplicacionWcf/SeleccionarProveedorResponse")>  _
        Function SeleccionarProveedorAsync() As System.Threading.Tasks.Task(Of Entidades.ProveedorENT())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAplicacionWcf/SeleccionarServidor", ReplyAction:="http://tempuri.org/IAplicacionWcf/SeleccionarServidorResponse")>  _
        Function SeleccionarServidor() As Entidades.ServidorENT()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAplicacionWcf/SeleccionarServidor", ReplyAction:="http://tempuri.org/IAplicacionWcf/SeleccionarServidorResponse")>  _
        Function SeleccionarServidorAsync() As System.Threading.Tasks.Task(Of Entidades.ServidorENT())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAplicacionWcf/BuscarAplicacion", ReplyAction:="http://tempuri.org/IAplicacionWcf/BuscarAplicacionResponse")>  _
        Function BuscarAplicacion(ByVal campo As String, ByVal texto As String) As Entidades.AplicacionENT()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAplicacionWcf/BuscarAplicacion", ReplyAction:="http://tempuri.org/IAplicacionWcf/BuscarAplicacionResponse")>  _
        Function BuscarAplicacionAsync(ByVal campo As String, ByVal texto As String) As System.Threading.Tasks.Task(Of Entidades.AplicacionENT())
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IAplicacionWcfChannel
        Inherits ServicioAplicacion.IAplicacionWcf, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class AplicacionWcfClient
        Inherits System.ServiceModel.ClientBase(Of ServicioAplicacion.IAplicacionWcf)
        Implements ServicioAplicacion.IAplicacionWcf
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function SeleccionarTodos() As Entidades.AplicacionENT() Implements ServicioAplicacion.IAplicacionWcf.SeleccionarTodos
            Return MyBase.Channel.SeleccionarTodos
        End Function
        
        Public Function SeleccionarTodosAsync() As System.Threading.Tasks.Task(Of Entidades.AplicacionENT()) Implements ServicioAplicacion.IAplicacionWcf.SeleccionarTodosAsync
            Return MyBase.Channel.SeleccionarTodosAsync
        End Function
        
        Public Function SelecccionarAplicacion(ByVal ProveedorId As Integer) As Entidades.AplicacionENT() Implements ServicioAplicacion.IAplicacionWcf.SelecccionarAplicacion
            Return MyBase.Channel.SelecccionarAplicacion(ProveedorId)
        End Function
        
        Public Function SelecccionarAplicacionAsync(ByVal ProveedorId As Integer) As System.Threading.Tasks.Task(Of Entidades.AplicacionENT()) Implements ServicioAplicacion.IAplicacionWcf.SelecccionarAplicacionAsync
            Return MyBase.Channel.SelecccionarAplicacionAsync(ProveedorId)
        End Function
        
        Public Function Insertar(ByVal aplicacionENT As Entidades.AplicacionENT) As Integer Implements ServicioAplicacion.IAplicacionWcf.Insertar
            Return MyBase.Channel.Insertar(aplicacionENT)
        End Function
        
        Public Function InsertarAsync(ByVal aplicacionENT As Entidades.AplicacionENT) As System.Threading.Tasks.Task(Of Integer) Implements ServicioAplicacion.IAplicacionWcf.InsertarAsync
            Return MyBase.Channel.InsertarAsync(aplicacionENT)
        End Function
        
        Public Function Actualizar(ByVal aplicacionENT As Entidades.AplicacionENT) As Integer Implements ServicioAplicacion.IAplicacionWcf.Actualizar
            Return MyBase.Channel.Actualizar(aplicacionENT)
        End Function
        
        Public Function ActualizarAsync(ByVal aplicacionENT As Entidades.AplicacionENT) As System.Threading.Tasks.Task(Of Integer) Implements ServicioAplicacion.IAplicacionWcf.ActualizarAsync
            Return MyBase.Channel.ActualizarAsync(aplicacionENT)
        End Function
        
        Public Function SeleccionarProveedor() As Entidades.ProveedorENT() Implements ServicioAplicacion.IAplicacionWcf.SeleccionarProveedor
            Return MyBase.Channel.SeleccionarProveedor
        End Function
        
        Public Function SeleccionarProveedorAsync() As System.Threading.Tasks.Task(Of Entidades.ProveedorENT()) Implements ServicioAplicacion.IAplicacionWcf.SeleccionarProveedorAsync
            Return MyBase.Channel.SeleccionarProveedorAsync
        End Function
        
        Public Function SeleccionarServidor() As Entidades.ServidorENT() Implements ServicioAplicacion.IAplicacionWcf.SeleccionarServidor
            Return MyBase.Channel.SeleccionarServidor
        End Function
        
        Public Function SeleccionarServidorAsync() As System.Threading.Tasks.Task(Of Entidades.ServidorENT()) Implements ServicioAplicacion.IAplicacionWcf.SeleccionarServidorAsync
            Return MyBase.Channel.SeleccionarServidorAsync
        End Function
        
        Public Function BuscarAplicacion(ByVal campo As String, ByVal texto As String) As Entidades.AplicacionENT() Implements ServicioAplicacion.IAplicacionWcf.BuscarAplicacion
            Return MyBase.Channel.BuscarAplicacion(campo, texto)
        End Function
        
        Public Function BuscarAplicacionAsync(ByVal campo As String, ByVal texto As String) As System.Threading.Tasks.Task(Of Entidades.AplicacionENT()) Implements ServicioAplicacion.IAplicacionWcf.BuscarAplicacionAsync
            Return MyBase.Channel.BuscarAplicacionAsync(campo, texto)
        End Function
    End Class
End Namespace
